-- MySQL Script generated by MySQL Workbench
-- Sun Jun  5 18:22:35 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

set global net_buffer_length = 1000000;
set global max_allowed_packet=10000000000000;
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema biblioteka
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `biblioteka` ;

-- -----------------------------------------------------
-- Schema biblioteka
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `biblioteka` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema test
-- -----------------------------------------------------
USE `biblioteka` ;

-- -----------------------------------------------------
-- Table `biblioteka`.`zgrada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`zgrada` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`zgrada` (
  `grad` VARCHAR(255) NULL,
  `broj` INT NULL,
  `ulica` VARCHAR(255) NULL,
  `id_zgrade` INT NOT NULL,
  PRIMARY KEY (`id_zgrade`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`biblioteka`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`biblioteka` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`biblioteka` (
  `id_biblioteke` INT NOT NULL,
  `naziv` VARCHAR(255) NOT NULL,
  `telefon` INT NULL,
  `zgrada_id_zgrade` INT NOT NULL,
  PRIMARY KEY (`id_biblioteke`),
  INDEX `fk_biblioteka_zgrada_idx` (`zgrada_id_zgrade` ASC) VISIBLE,
  CONSTRAINT `fk_biblioteka_zgrada`
    FOREIGN KEY (`zgrada_id_zgrade`)
    REFERENCES `biblioteka`.`zgrada` (`id_zgrade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`bibliotekar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`bibliotekar` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`bibliotekar` (
  `id_bibliotekara` INT NOT NULL,
  `datum_zaposlenja` DATE NULL,
  `plata` VARCHAR(255) NULL,
  `ime_bibliotekara` VARCHAR(255) NULL,
  `prezime_bibliotekara` VARCHAR(255) NULL,
  `biblioteka_id_biblioteke` INT NOT NULL,
  PRIMARY KEY (`id_bibliotekara`),
  INDEX `fk_bibliotekar_biblioteka1_idx` (`biblioteka_id_biblioteke` ASC) VISIBLE,
  CONSTRAINT `fk_bibliotekar_biblioteka1`
    FOREIGN KEY (`biblioteka_id_biblioteke`)
    REFERENCES `biblioteka`.`biblioteka` (`id_biblioteke`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`knjiga`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`knjiga` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`knjiga` (
  `ISBN` INT NOT NULL,
  `naziv` VARCHAR(255) NULL,
  `zanr` VARCHAR(45) NULL,
  `godina_izdanja` INT NULL,
  `izdavacka_kuca` VARCHAR(45) NULL,
  `biblioteka_id_biblioteke` INT NOT NULL,
  PRIMARY KEY (`ISBN`),
  INDEX `fk_knjiga_biblioteka1_idx` (`biblioteka_id_biblioteke` ASC) VISIBLE,
  CONSTRAINT `fk_knjiga_biblioteka1`
    FOREIGN KEY (`biblioteka_id_biblioteke`)
    REFERENCES `biblioteka`.`biblioteka` (`id_biblioteke`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`autor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`autor` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`autor` (
  `id_autora` INT NOT NULL,
  `ime_autora` VARCHAR(45) NULL,
  `prezime_autora` VARCHAR(255) NULL,
  PRIMARY KEY (`id_autora`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`korisnik`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`korisnik` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`korisnik` (
  `jmbg` INT NOT NULL,
  `ime_korisnika` VARCHAR(255) NULL,
  `prezime_korisnika` VARCHAR(255) NULL,
  `telefon` VARCHAR(45) NULL,
  PRIMARY KEY (`jmbg`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`clanska_karta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`clanska_karta` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`clanska_karta` (
  `id_karte` INT NOT NULL,
  `cena` INT NULL,
  `datum` DATE NULL,
  `korisnik_jmbg` INT NOT NULL,
  PRIMARY KEY (`id_karte`),
  INDEX `fk_clanska_karta_korisnik1_idx` (`korisnik_jmbg` ASC) VISIBLE,
  CONSTRAINT `fk_clanska_karta_korisnik1`
    FOREIGN KEY (`korisnik_jmbg`)
    REFERENCES `biblioteka`.`korisnik` (`jmbg`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`napisao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`napisao` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`napisao` (
  `knjiga_ISBN` INT NOT NULL,
  `autor_id_autora` INT NOT NULL,
  PRIMARY KEY (`knjiga_ISBN`, `autor_id_autora`),
  INDEX `fk_knjiga_has_autor_autor1_idx` (`autor_id_autora` ASC) VISIBLE,
  INDEX `fk_knjiga_has_autor_knjiga1_idx` (`knjiga_ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_knjiga_has_autor_knjiga1`
    FOREIGN KEY (`knjiga_ISBN`)
    REFERENCES `biblioteka`.`knjiga` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_knjiga_has_autor_autor1`
    FOREIGN KEY (`autor_id_autora`)
    REFERENCES `biblioteka`.`autor` (`id_autora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`pozajmica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`pozajmica` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`pozajmica` (
  `knjiga_ISBN` INT NOT NULL,
  `korisnik_jmbg` INT NOT NULL,
  PRIMARY KEY (`knjiga_ISBN`, `korisnik_jmbg`),
  INDEX `fk_knjiga_has_korisnik_korisnik1_idx` (`korisnik_jmbg` ASC) VISIBLE,
  INDEX `fk_knjiga_has_korisnik_knjiga1_idx` (`knjiga_ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_knjiga_has_korisnik_knjiga1`
    FOREIGN KEY (`knjiga_ISBN`)
    REFERENCES `biblioteka`.`knjiga` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_knjiga_has_korisnik_korisnik1`
    FOREIGN KEY (`korisnik_jmbg`)
    REFERENCES `biblioteka`.`korisnik` (`jmbg`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteka`.`izdaje`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteka`.`izdaje` ;

CREATE TABLE IF NOT EXISTS `biblioteka`.`izdaje` (
  `clanska_karta_id_karte` INT NOT NULL,
  `bibliotekar_id_bibliotekara` INT NOT NULL,
  INDEX `fk_clanska_karta_has_bibliotekar_clanska_karta1_idx` (`clanska_karta_id_karte` ASC) VISIBLE,
  INDEX `fk_izdaje_bibliotekar1_idx` (`bibliotekar_id_bibliotekara` ASC) VISIBLE,
  PRIMARY KEY (`clanska_karta_id_karte`),
  CONSTRAINT `fk_clanska_karta_has_bibliotekar_clanska_karta1`
    FOREIGN KEY (`clanska_karta_id_karte`)
    REFERENCES `biblioteka`.`clanska_karta` (`id_karte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_izdaje_bibliotekar1`
    FOREIGN KEY (`bibliotekar_id_bibliotekara`)
    REFERENCES `biblioteka`.`bibliotekar` (`id_bibliotekara`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
